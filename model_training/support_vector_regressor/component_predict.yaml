name: Predict
description: Predicts the labels for the given inputs.
inputs:
- {name: inputs_dataset, type: Dataset, description: The dataset of inputs to predict
    on. This is usually the test set.}
- {name: trained_model, type: Model, description: The trained model.}
outputs:
- {name: predicted_labels, type: Dataset, description: The predictions.}
implementation:
  container:
    image: python:3.7
    command:
    - sh
    - -c
    - |2

      if ! [ -x "$(command -v pip)" ]; then
          python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip
      fi

      PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'scikit-learn' 'numpy' 'kfp==1.8.19' && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp -d)
      printf "%s" "$0" > "$program_path/ephemeral_component.py"
      python3 -m kfp.v2.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
    - |2+

      import kfp
      from kfp.v2 import dsl
      from kfp.v2.dsl import *
      from typing import *

      def predict(
              inputs_dataset: Input[Dataset],
              trained_model: Input[Model],
              predicted_labels: Output[Dataset],
      ):
          """
          Predicts the labels for the given inputs.
          :param inputs_dataset: The dataset of inputs to predict on. This is usually the test set.
          :param trained_model: The trained model.
          :param predicted_labels: The predictions.
          """
          import joblib
          import numpy as np

          X = np.genfromtxt(inputs_dataset.path, delimiter=",")

          model = joblib.load(trained_model.path)
          y_pred = model.predict(X)

          np.savetxt(predicted_labels.path, y_pred)

    args:
    - --executor_input
    - {executorInput: null}
    - --function_to_execute
    - predict
